{
  "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY Jexactyl PANEL - jexactyl.com",
  "meta": { "version": "PTDL_v2", "update_url": null },
  "exported_at": "2025-09-25T20:18:34+00:00",
  "name": "Node.js",
  "author": "jjakesv870@gmail.com",
  "description": "a generic node.js egg\r\n\r\nThis will clone a git repo. it defaults to master if no branch is specified.\r\n\r\nInstalls the node_modules on install. If you set user_upload then I assume you know what you are doing.",
  "features": null,
  "docker_images": {
    "Nodejs 22": "ghcr.io/jjakesv/yolks:nodejs_22",
    "Nodejs 20": "ghcr.io/jjakesv/yolks:nodejs_20",
    "Nodejs 18": "ghcr.io/jjakesv/yolks:nodejs_18",
    "Nodejs 16": "ghcr.io/jjakesv/yolks:nodejs_16",
    "Nodejs 14": "ghcr.io/jjakesv/yolks:nodejs_14",
    "Nodejs 12": "ghcr.io/jjakesv/yolks:nodejs_12"
  },
  "file_denylist": [],
  "startup": "if [[ -d .git ]] && [[ {{AUTO_UPDATE}} == \"1\" ]]; then git pull; fi; if [[ ! -z ${NODE_PACKAGES} ]]; then /usr/local/bin/npm install ${NODE_PACKAGES}; fi; if [[ ! -z ${UNNODE_PACKAGES} ]]; then /usr/local/bin/npm uninstall ${UNNODE_PACKAGES}; fi; if [ -f /home/container/package.json ]; then /usr/local/bin/npm install; fi; if [[ \"${MAIN_FILE}\" == \"*.js\" ]]; then /usr/local/bin/node \"/home/container/${MAIN_FILE}\" ${NODE_ARGS}; else /usr/local/bin/ts-node --esm \"/home/container/${MAIN_FILE}\" ${NODE_ARGS}; fi",
  "config": {
    "files": "{}",
    "startup": "{\r\n    \"done\": [\r\n        \"\"\r\n    ]\r\n}",
    "logs": "{}",
    "stop": "^C"
  },
  "scripts": {
    "installation": {
      "script": "#!/bin/bash\r\n# NodeJS App Installation Script\r\napt update && apt install -y git curl jq file unzip make gcc g++ python3 python3-dev python3-pip libtool\r\nnpm install npm@latest --location=global\r\nmkdir -p /mnt/server && cd /mnt/server\r\nif [ \"${USER_UPLOAD}\" == \"true\" ] || [ \"${USER_UPLOAD}\" == \"1\" ]; then echo \"assuming user knows what they are doing\"; exit 0; fi\r\nif [[ ${GIT_ADDRESS} != *.git ]]; then GIT_ADDRESS=${GIT_ADDRESS}.git; fi\r\nif [ -n \"${USERNAME}\" ] || [ -n \"${ACCESS_TOKEN}\" ]; then GIT_ADDRESS=\"https://${USERNAME}:${ACCESS_TOKEN}@$(echo ${GIT_ADDRESS} | cut -d/ -f3-)\"; fi\r\nif [ \"$(ls -A /mnt/server)\" ]; then ORIGIN=$(git config --get remote.origin.url 2>/dev/null || echo \"\"); if [ \"${ORIGIN}\" == \"${GIT_ADDRESS}\" ]; then git pull; fi; else if [ -z ${BRANCH} ]; then git clone ${GIT_ADDRESS} .; else git clone --single-branch --branch ${BRANCH} ${GIT_ADDRESS} .; fi; fi\r\nif [[ ! -z ${NODE_PACKAGES} ]]; then /usr/local/bin/npm install ${NODE_PACKAGES}; fi\r\nif [ -f /mnt/server/package.json ]; then /usr/local/bin/npm install --production; fi\r\necho \"install complete\"\r\nexit 0",
      "container": "ghcr.io/jjakesv/yolks:nodejs_22",
      "entrypoint": "bash"
    }
  },
  "variables": [
    {
      "name": "Git Repo Address",
      "description": "GitHub Repo to clone\r\n\r\nI.E. https://github.com/parkervcp/repo_name",
      "env_variable": "GIT_ADDRESS",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    },
    {
      "name": "Install Branch",
      "description": "The branch to install.",
      "env_variable": "BRANCH",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    },
    {
      "name": "User Uploaded Files",
      "description": "Skip all the install stuff if you are letting a user upload files.\r\n\r\n0 = false (default)\r\n1 = true",
      "env_variable": "USER_UPLOAD",
      "default_value": "0",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|boolean",
      "field_type": "text"
    },
    {
      "name": "Auto Update",
      "description": "Pull the latest files on startup when using a GitHub repo.",
      "env_variable": "AUTO_UPDATE",
      "default_value": "0",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|boolean",
      "field_type": "text"
    },
    {
      "name": "Additional Node packages",
      "description": "Install additional node packages.\r\n\r\nUse spaces to separate.",
      "env_variable": "NODE_PACKAGES",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    },
    {
      "name": "Git Username",
      "description": "Username to auth with git.",
      "env_variable": "USERNAME",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    },
    {
      "name": "Git Access Token",
      "description": "Password to use with git.\r\n\r\nIt's best practice to use a Personal Access Token.\r\nhttps://github.com/settings/tokens\r\nhttps://gitlab.com/-/profile/personal_access_tokens",
      "env_variable": "ACCESS_TOKEN",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    },
    {
      "name": "Uninstall Node packages",
      "description": "Uninstall node packages.\r\n\r\nUse spaces to separate.",
      "env_variable": "UNNODE_PACKAGES",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    },
    {
      "name": "Main file",
      "description": "The file that starts the app.\r\nCan be .js and .ts",
      "env_variable": "MAIN_FILE",
      "default_value": "index.js",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|max:16",
      "field_type": "text"
    },
    {
      "name": "Additional Arguments.",
      "description": "Any extra arguments for nodejs or ts-node",
      "env_variable": "NODE_ARGS",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string|max:64",
      "field_type": "text"
    }
  ]
}
